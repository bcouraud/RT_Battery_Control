# """ Before running this, you need to install Ganache to run a local Blockchain. Otherwise, use infura to access a node. """
# Here, addresses match the local Ganache Blockchain.
# Then, You should compile the Greeting.sol file (solidity Smart Contract) by pressing F5. This will generate a Greeter.json.
# You then need to retrieve the abi and Bytecode of your Smart Contract. To do so:
# 1. the bytecode is generated by the compilation, and can be retrieved in the bin\Greeter.json (find the "bytecode" line)
# 2. the abi: in the window of the Greeter.sol solidity file, on VsCode, press F1, and type in: Solidity: Code generate ... ABI... the abi is then in the folder bin, the file named Greeter.abi  (btw, the bytecode is in the Greeter.bin file)
import json
from web3 import Web3

ganache_url = "HTTP://127.0.0.1:7545"
w3 = Web3(Web3.HTTPProvider(ganache_url))
print(w3.isConnected())
print(w3.eth.blockNumber)

# set the default account eth.accounts
#web3.eth.defaultAccount = '0xWalletAddress';
w3.eth.defaultAccount = w3.eth.accounts[0]

abi = json.loads('[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"greet","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"greeting","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_greeting","type":"string"}],"name":"setGreeting","outputs":[],"stateMutability":"nonpayable","type":"function"}]')
bytecode = "608060405234801561001057600080fd5b506040805180820190915260058082526448656c6c6f60d81b602090920191825261003d91600091610043565b506100de565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061008457805160ff19168380011785556100b1565b828001600101855582156100b1579182015b828111156100b1578251825591602001919060010190610096565b506100bd9291506100c1565b5090565b6100db91905b808211156100bd57600081556001016100c7565b90565b61037d806100ed6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063a413686214610046578063cfae3217146100ee578063ef690cc01461016b575b600080fd5b6100ec6004803603602081101561005c57600080fd5b81019060208101813564010000000081111561007757600080fd5b82018360208201111561008957600080fd5b803590602001918460018302840111640100000000831117156100ab57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610173945050505050565b005b6100f661018a565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610130578181015183820152602001610118565b50505050905090810190601f16801561015d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6100f6610221565b80516101869060009060208401906102af565b5050565b60008054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156102165780601f106101eb57610100808354040283529160200191610216565b820191906000526020600020905b8154815290600101906020018083116101f957829003601f168201915b505050505090505b90565b6000805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156102a75780601f1061027c576101008083540402835291602001916102a7565b820191906000526020600020905b81548152906001019060200180831161028a57829003601f168201915b505050505081565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106102f057805160ff191683800117855561031d565b8280016001018555821561031d579182015b8281111561031d578251825591602001919060010190610302565b5061032992915061032d565b5090565b61021e91905b80821115610329576000815560010161033356fea2646970667358221220c1965456994b9f99520e35059ca43fec8f3557066f50626650fee68b58b7ff7b64736f6c63430006080033"

GreeterSC = w3.eth.contract(abi = abi,bytecode=bytecode)
tx_hash = GreeterSC.constructor().transact()
tx_receipt = w3.eth.waitForTransactionReceipt(tx_hash)

contract = w3.eth.contract(
    address = tx_receipt.contractAddress,
    abi = abi
)

print(contract.functions.greet().call())


